#include "SPI.h"
#include "TFT_22_ILI9225.h"
#include "math.h"


#define TFT_RST A4
#define TFT_RS  A3
#define TFT_CS  A5  // SS
#define TFT_SDI A2  // MOSI
#define TFT_CLK A1  // SCK
#define TFT_LED 0   // 0 if wired to +5V directly

#define TFT_BRIGHTNESS 200 // Initial brightness of TFT backlight (optional)

#define ROTATE_ANGLE 10 // Angle in degrees to rotate the triangl

// Use hardware SPI (faster - on Uno: 13-SCK, 12-MISO, 11-MOSI)
TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_SDI, TFT_CLK, TFT_LED);



// Setup
void setup() {
  tft.begin();
  Serial.begin(9600);
}

// Loop
void loop() {
 //text_test();
 //rectangle_test();
 //circle_test();
 //line_test();
 //pixel_test();
  //orientaion_test();
  //bitmap_test();
  createUI1();
  delay(1000);
  createUI2();
  delay(1000);
  
  
}

void text_test()
{

  tft.setFont(Terminal12x16);
  tft.drawText(10,90,"JAI SHREE RAM",COLOR_ORANGE);
  delay(1000);
  tft.clear();
  tft.setFont(Terminal6x8);
  tft.drawText(10,10,"Roopa MC");
  tft.setFont(Terminal6x8);
  tft.drawText(10,20,"Remya MC");
  tft.setFont(Terminal6x8);
  tft.drawText(10,30,"HOD MC");
  tft.setFont(Terminal6x8);
  tft.drawText(10,40,"NIE MC");
  tft.setFont(Terminal6x8);
  tft.drawText(10,50,"VTU MC");
  delay(100);
  tft.clear();
  // other option for font is 12x16
  tft.setFont(Terminal12x16);
  tft.drawText(10,10,"Roopa MC");
  tft.setFont(Terminal12x16);
  tft.drawText(10,40,"Remya MC");
  tft.setFont(Terminal12x16);
  tft.drawText(10,80,"HOD MC");
  tft.setFont(Terminal12x16);
  tft.drawText(10,120,"NIE MC");
  tft.setFont(Terminal12x16);
  tft.drawText(10,160,"VTU MC");
  delay(100);
  tft.clear();


   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"State of relay1:");
   tft.drawText(10,20,"State of relay2:");
   tft.drawText(10,30,"State of relay3:");
   tft.drawText(10,40,"State of relay4:");
   tft.drawText(10,50,"State of relay5:");
   tft.drawText(10,60,"State of relay6:");
   tft.drawText(10,70,"State of relay7:");
   tft.drawText(10,80,"State of relay8:");
   tft.drawText(10,90,"State of relay9:");
   tft.drawText(10,100,"State of relay10:");
   tft.drawText(10,110,"State of relay11:");
   tft.drawText(10,120,"State of relay12:");
   tft.drawText(10,130,"State of relay13:");
   tft.drawText(10,140,"State of relay14:");
   tft.drawText(10,150,"State of relay15:");
   tft.drawText(10,160,"State of relay16:");
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_RED);
   tft.drawText(10,60,"Remya MC",COLOR_RED);
   tft.drawText(10,90,"HOD MC",COLOR_RED);
   tft.drawText(10,120,"NIE MC",COLOR_RED);
   tft.drawText(10,150,"VTU MC",COLOR_RED);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_BLUE);
   tft.drawText(10,60,"Remya MC",COLOR_BLUE);
   tft.drawText(10,90,"HOD MC",COLOR_BLUE);
   tft.drawText(10,120,"NIE MC",COLOR_BLUE);
   tft.drawText(10,150,"VTU MC",COLOR_BLUE);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_GREEN);
   tft.drawText(10,60,"Remya MC",COLOR_GREEN);
   tft.drawText(10,90,"HOD MC",COLOR_GREEN);
   tft.drawText(10,120,"NIE MC",COLOR_GREEN);
   tft.drawText(10,150,"VTU MC",COLOR_GREEN);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_ORANGE);
   tft.drawText(10,60,"Remya MC",COLOR_ORANGE);
   tft.drawText(10,90,"HOD MC",COLOR_ORANGE);
   tft.drawText(10,120,"NIE MC",COLOR_ORANGE);
   tft.drawText(10,150,"VTU MC",COLOR_ORANGE);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_YELLOW);
   tft.drawText(10,60,"Remya MC",COLOR_YELLOW);
   tft.drawText(10,90,"HOD MC",COLOR_YELLOW);
   tft.drawText(10,120,"NIE MC",COLOR_YELLOW);
   tft.drawText(10,150,"VTU MC",COLOR_YELLOW);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_VIOLET);
   tft.drawText(10,60,"Remya MC",COLOR_VIOLET);
   tft.drawText(10,90,"HOD MC",COLOR_VIOLET);
   tft.drawText(10,120,"NIE MC",COLOR_VIOLET);
   tft.drawText(10,150,"VTU MC",COLOR_VIOLET);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_CYAN);
   tft.drawText(10,60,"Remya MC",COLOR_CYAN);
   tft.drawText(10,90,"HOD MC",COLOR_CYAN);
   tft.drawText(10,120,"NIE MC",COLOR_CYAN);
   tft.drawText(10,150,"VTU MC",COLOR_CYAN);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_BROWN);
   tft.drawText(10,60,"Remya MC",COLOR_BROWN);
   tft.drawText(10,90,"HOD MC",COLOR_BROWN);
   tft.drawText(10,120,"NIE MC",COLOR_BROWN);
   tft.drawText(10,150,"VTU MC",COLOR_BROWN);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_MAGENTA);
   tft.drawText(10,60,"Remya MC",COLOR_MAGENTA);
   tft.drawText(10,90,"HOD MC",COLOR_MAGENTA);
   tft.drawText(10,120,"NIE MC",COLOR_MAGENTA);
   tft.drawText(10,150,"VTU MC",COLOR_MAGENTA);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a color test");
   tft.setFont(Terminal12x16);
   tft.drawText(10,30,"Roopa MC",COLOR_GRAY);
   tft.drawText(10,60,"Remya MC",COLOR_GRAY);
   tft.drawText(10,90,"HOD MC",COLOR_GRAY);
   tft.drawText(10,120,"NIE MC",COLOR_GRAY);
   tft.drawText(10,150,"VTU MC",COLOR_GRAY);
   delay(100);
   tft.clear();
   tft.setFont(Terminal6x8);
   tft.drawText(10,10,"Doing a background color check");
   tft.setFont(Terminal12x16);
   tft.setBackgroundColor(COLOR_RED);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_WHITE);
   delay(1000);
   tft.setBackgroundColor(COLOR_BLUE);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_WHITE);
   delay(1000);
   tft.setBackgroundColor(COLOR_GREEN);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_WHITE);
   delay(1000);
   tft.setBackgroundColor(COLOR_YELLOW);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_WHITE);
   delay(1000);
   tft.setBackgroundColor(COLOR_ORANGE);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_WHITE);
   delay(1000);
   tft.setBackgroundColor(COLOR_CYAN);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_WHITE);
   delay(1000);
   tft.setBackgroundColor(COLOR_MAGENTA);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_WHITE);
   delay(1000);
   tft.setBackgroundColor(COLOR_BROWN);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_WHITE);
   delay(1000);
   tft.setBackgroundColor(COLOR_GRAY);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_BLACK);
   delay(1000);
   tft.setBackgroundColor(COLOR_VIOLET);
   tft.drawText(10,90,"JAI SHREE RAM",COLOR_WHITE);
   delay(1000);
   tft.clear();
   tft.setBackgroundColor(COLOR_BLACK);
   tft.drawText(10,80,"Playing with backlight");
   tft.setBacklight(HIGH);
   tft.setBacklight(LOW);
   tft.setFont(Terminal12x16);
   tft.drawText(10,80,"Backligh OFF");
   delay(1000);
   tft.clear();
   tft.setBacklight(HIGH);
   tft.drawText(10,80,"Backligh OFF");
   delay(1000);
   tft.clear();
  }

void rectangle_test()
{

  tft.setFont(Terminal12x16);
  tft.drawText(10,90,"REctangles");
  tft.clear();
  tft.drawRectangle(0,0,50,50,COLOR_RED);
   tft.drawRectangle(60,0,110,50,COLOR_GREEN);
   tft.drawRectangle(120,0,170,50,COLOR_BLUE);
   tft.drawRectangle(0,60,50,110,COLOR_ORANGE);
   tft.drawRectangle(60,60,110,110,COLOR_YELLOW);
   tft.drawRectangle(120,60,170,110,COLOR_CYAN);
   tft.drawRectangle(0,120,50,170,COLOR_MAGENTA);
   tft.drawRectangle(60,120,110,170,COLOR_GRAY);
   tft.drawRectangle(120,120,170,170,COLOR_WHITE);
   tft.drawRectangle(0,180,50,210,COLOR_RED);
   tft.drawRectangle(60,180,110,210,COLOR_GREEN);
   tft.drawRectangle(120,180,170,210,COLOR_BLUE);
   tft.clear();
   delay(1000);
   tft.drawRectangle(0,0,50,50,COLOR_RED);
   tft.drawRectangle(0,0,60,60,COLOR_GREEN);
   tft.drawRectangle(0,0,70,70,COLOR_BLUE);
   tft.drawRectangle(0,0,80,80,COLOR_MAGENTA);
   tft.drawRectangle(0,0,90,90,COLOR_CYAN);
   tft.drawRectangle(0,0,100,100,COLOR_ORANGE);
   tft.drawRectangle(0,0,110,110,COLOR_YELLOW);
   tft.drawRectangle(0,0,120,120,COLOR_WHITE);
   tft.drawRectangle(0,0,130,120,COLOR_BROWN);
   tft.drawRectangle(0,0,140,140,COLOR_GRAY);
   tft.drawRectangle(0,0,150,150,COLOR_RED);
   tft.drawRectangle(0,0,160,160,COLOR_GREEN);
   tft.drawRectangle(0,0,170,170,COLOR_BLUE);
   delay(1000);
   tft.clear();
   tft.drawText(10,90,"Solid");
   tft.drawText(10,110,"Rectangles");
   tft.clear();
   tft.fillRectangle(0,0,50,50,COLOR_RED);
   tft.fillRectangle(60,0,110,50,COLOR_GREEN);
   tft.fillRectangle(120,0,170,50,COLOR_BLUE);
   tft.fillRectangle(0,60,50,110,COLOR_ORANGE);
   tft.fillRectangle(60,60,110,110,COLOR_YELLOW);
   tft.fillRectangle(120,60,170,110,COLOR_CYAN);
   tft.fillRectangle(0,120,50,170,COLOR_MAGENTA);
   tft.fillRectangle(60,120,110,170,COLOR_GRAY);
   tft.fillRectangle(120,120,170,170,COLOR_WHITE);
   tft.fillRectangle(0,180,50,210,COLOR_RED);
   tft.fillRectangle(60,180,110,210,COLOR_GREEN);
   tft.fillRectangle(120,180,170,210,COLOR_BLUE);
   delay(1000);
   tft.clear();
   
   
   
  tft.clear();
  for(int j=10;j<=210;j=j+10)
  {
    for(int i=0;i<=170;i=i+10)
  {
    tft.drawRectangle(0,0,i,j,COLOR_GREEN);
    }
    }
    tft.clear();
    for(int j=10;j<=210;j=j+10)
  {
    for(int i=0;i<=170;i=i+10)
  {
    tft.drawRectangle(0,0,i,j,COLOR_BLUE);
    }
    }
    tft.clear();
  
 }

void circle_test()
{
tft.setFont(Terminal12x16);
tft.drawText(50,110,"CIRCLE");
delay(10);
tft.clear();
tft.drawCircle(85,110,70,COLOR_WHITE);
delay(10);
tft.clear();
tft.drawCircle(85,110,70,COLOR_RED);
delay(10);
tft.clear();
tft.drawCircle(85,110,70,COLOR_GREEN);
delay(10);
tft.clear();
tft.drawCircle(85,110,70,COLOR_BLUE);
delay(10);
tft.clear();
tft.drawCircle(85,110,70,COLOR_CYAN);
delay(10);
tft.clear();
tft.drawCircle(85,110,70,COLOR_MAGENTA);
delay(10);
tft.clear();
tft.drawCircle(85,110,70,COLOR_ORANGE);
delay(10);
tft.clear();
tft.drawCircle(85,110,70,COLOR_GRAY);
delay(10);
tft.clear();
tft.drawCircle(85,110,70,COLOR_VIOLET);
delay(10);
tft.clear();
tft.drawCircle(85,110,10,COLOR_WHITE);
tft.drawCircle(85,110,20,COLOR_WHITE);
tft.drawCircle(85,110,30,COLOR_WHITE);
tft.drawCircle(85,110,40,COLOR_WHITE);
tft.drawCircle(85,110,50,COLOR_WHITE);
tft.drawCircle(85,110,60,COLOR_WHITE);
tft.drawCircle(85,110,70,COLOR_WHITE);
tft.drawCircle(85,110,80,COLOR_WHITE);
tft.drawCircle(85,110,90,COLOR_WHITE);
delay(1000);
tft.clear();
tft.drawCircle(85,110,90,COLOR_WHITE);
tft.drawCircle(85,110,80,COLOR_WHITE);
tft.drawCircle(85,110,70,COLOR_WHITE);
tft.drawCircle(85,110,60,COLOR_WHITE);
tft.drawCircle(85,110,60,COLOR_WHITE);
tft.drawCircle(85,110,40,COLOR_WHITE);
tft.drawCircle(85,110,30,COLOR_WHITE);
tft.drawCircle(85,110,20,COLOR_WHITE);
tft.drawCircle(85,110,10,COLOR_WHITE);
delay(1000);
tft.clear();
tft.drawCircle(85,110,10,COLOR_WHITE);
tft.drawCircle(85,110,20,COLOR_RED);
tft.drawCircle(85,110,30,COLOR_BLUE);
tft.drawCircle(85,110,40,COLOR_GREEN);
tft.drawCircle(85,110,50,COLOR_CYAN);
tft.drawCircle(85,110,60,COLOR_MAGENTA);
tft.drawCircle(85,110,70,COLOR_ORANGE);
tft.drawCircle(85,110,80,COLOR_VIOLET);
tft.drawCircle(85,110,90,COLOR_YELLOW);
delay(1000);
tft.clear();
tft.drawText(50,90,"SOLID");
tft.drawText(50,110,"CIRCLE");
delay(100);
tft.clear();
for(int i=10;i<=210;i=i+30)
{
  tft.fillCircle(10,i,10,COLOR_WHITE);
tft.fillCircle(40,i,10,COLOR_WHITE);
tft.fillCircle(70,i,10,COLOR_WHITE);
tft.fillCircle(100,i,10,COLOR_WHITE);
tft.fillCircle(130,i,10,COLOR_WHITE);
tft.fillCircle(160,i,10,COLOR_WHITE);}
delay(1000);
tft.clear();
for(int i=10;i<=210;i=i+30)
{
  tft.fillCircle(10,i,10,COLOR_WHITE);
tft.fillCircle(40,i,10,COLOR_RED);
tft.fillCircle(70,i,10,COLOR_GREEN);
tft.fillCircle(100,i,10,COLOR_CYAN);
tft.fillCircle(130,i,10,COLOR_MAGENTA);
tft.fillCircle(160,i,10,COLOR_ORANGE);}
delay(1000);
tft.clear();
for(int i=10;i<=210;i=i+30)
{
  tft.fillCircle(10,i,10,random(0xffff));
tft.fillCircle(40,i,10,random(0xffff));
tft.fillCircle(70,i,10,random(0xffff));
tft.fillCircle(100,i,10,random(0xffff));
tft.fillCircle(130,i,10,random(0xffff));
tft.fillCircle(160,i,10,random(0xffff));
}
delay(1000);
tft.clear();

  }

void line_test()
{
  tft.setFont(Terminal12x16);
  tft.drawText(60,100,"LINE");
  tft.drawText(60,120,"TEST");
  delay(100);
  tft.clear();
  for(int i=0;i<=220;i=i+10)
  {
    tft.drawLine(0,i,tft.maxX()-1,tft.maxY(),COLOR_BLUE);
    }
    
  delay(1000);
  tft.clear();
  for(int i=0;i<=220;i=i+10)
  {
    tft.drawLine(0,i,tft.maxX()-1,i,COLOR_GREEN);
    }
    
  delay(1000);
  tft.clear();
  
  
  }
void pixel_test()
{
  for(int i=0;i<=10000;i++)
  {
    tft.drawPixel(random(tft.maxX()),random(tft.maxY()),random(0xffff));
    delay(10);
  }
  
  }

void orientaion_test()
{
  tft.setFont(Terminal12x16);
  tft.drawText(30,100,"ORIENTATION");
  delay(1000);
  tft.clear();
  for(int i=0;i<=4;i++)
  {
    tft.setOrientation(i);
    tft.setFont(Terminal12x16);
  tft.drawText(10,10,"Roopa MC");
  tft.setFont(Terminal12x16);
  tft.drawText(10,40,"Remya MC");
  tft.setFont(Terminal12x16);
  tft.drawText(10,80,"HOD MC");
  tft.setFont(Terminal12x16);
  tft.drawText(10,120,"NIE MC");
  tft.setFont(Terminal12x16);
  tft.drawText(10,160,"VTU MC");
  delay(100);
  tft.clear();
    
 }
 tft.setOrientation(1);
 tft.drawText(10,10,"Relay1");
 tft.drawText(120,10,"Relay2");
 tft.drawText(10,30,"Relay3");
 tft.drawText(120,30,"Relay4");
 tft.drawText(10,50,"Relay5");
 tft.drawText(120,50,"Relay6");
 tft.drawText(10,70,"Relay7");
 tft.drawText(120,70,"Relay8");
 tft.drawText(10,90,"Relay9");
 tft.drawText(120,90,"Relay10");
 tft.drawText(10,110,"Relay11");
 tft.drawText(120,110,"Relay12");
 tft.drawText(10,130,"Relay13");
 tft.drawText(120,130,"Relay14");
 tft.drawText(10,150,"Relay15");
 tft.drawText(120,150,"Relay16");
 delay(10000);
 tft.clear();
  
  }
void bitmap_test()
{
  static const uint8_t PROGMEM tux[] = 
{
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x0,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x0,0x0,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x0,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x0,0x0,0x0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x0,0x0,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x0,0x0,0x0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x0,0x0,0x0,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x0,0x0,0x0,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x0,0x0,0x0,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x0,0x0,0x0,0x0,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x0,0x0,0x0,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x0,0x0,0x1,0xfc,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x0,0x0,0x7,0xfe,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x1,0xf8,0x0,0xf,0xff,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x3,0xfc,0x0,0x1f,0xff,0x80,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x7,0xfe,0x0,0x1f,0xff,0xc0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x7,0xfe,0x0,0x3f,0xff,0xc0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xf,0xff,0x0,0x3f,0xff,0xe0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xf,0xff,0x0,0x7f,0xf,0xe0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xf,0xbf,0x80,0x7e,0x7,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xf,0xf,0x80,0x7c,0x7,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xe,0x7,0x80,0x78,0x3,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xe,0x7,0x80,0x78,0x3,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xe,0x7,0x80,0x78,0x3,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xe,0x3,0x80,0x78,0x3,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xe,0x3,0x0,0x38,0x3,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xe,0x0,0x0,0x0,0x3,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xe,0x0,0xff,0xc0,0x3,0xe0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x6,0x1,0xff,0xf8,0x3,0xe0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7,0x7,0xff,0xfc,0x7,0xe0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x3,0x8f,0xff,0xff,0x7,0xc0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x3,0x1f,0xff,0xff,0xc0,0x80,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x3f,0xff,0xff,0xf8,0x0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0xff,0xff,0xff,0xff,0x0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x1,0xff,0xff,0xff,0xff,0xc0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x3,0xff,0xff,0xff,0xff,0xe0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf,0xff,0xff,0xff,0xff,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xf,0xff,0xff,0xff,0xfe,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x19,0xff,0xff,0xff,0xf8,0x70,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x18,0xff,0xff,0xff,0xe0,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x1c,0x7f,0xff,0xff,0x87,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xe,0x3f,0xff,0xff,0xf,0xe0,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x7,0x1f,0xff,0xfc,0x3f,0xc0,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x7,0x87,0xff,0xf0,0xff,0x80,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x3,0xe1,0xff,0xc3,0xff,0x10,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0xf0,0x38,0xf,0xfe,0x38,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x7e,0x0,0x3f,0xf8,0x78,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x2,0x1f,0xe7,0xff,0xc1,0xf8,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x3,0x8f,0xff,0xff,0x7,0xfc,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x3,0xc7,0xff,0xfe,0x3f,0xfc,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x3,0xe3,0xff,0xf8,0x7f,0xfc,0x0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x7,0xf0,0xff,0xe1,0xff,0xfe,0x0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x7,0xfc,0x3f,0x7,0xff,0xfe,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x7,0xfe,0x0,0x1f,0xff,0xfe,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x7,0xff,0xc0,0xff,0xff,0xff,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x7,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0xf,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0xf,0xff,0xff,0xff,0xff,0xff,0x80,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0x80,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0x80,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x0,0x7f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x0,0x7f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xe0,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xe0,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x0,0xf,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x0,0x7,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x0,0x7,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x0,0x3,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x0,0x1,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x0,0x0,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x2,0x0,0x0,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x1,0x0,0x0,0x7f,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x80,0x0,0x3f,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x40,0x0,0x3f,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x20,0x0,0x1f,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xe0,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x0,0x0,0xf,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x10,0x0,0xf,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xc0,0x10,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x8,0x0,0x7,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0x80,0x20,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x0,0x0,0x7,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0x0,0x20,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x4,0x0,0x3,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0x0,0x40,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x2,0x0,0x1,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xfe,0x0,0x40,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x2,0x0,0x1,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xfe,0x0,0x80,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x1,0x0,0x0,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xfc,0x0,0x80,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x1,0x0,0x0,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xfc,0x1,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x1,0x80,0x0,0x7f,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xf8,0x1,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x80,0x0,0x7f,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xf8,0x2,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0xc0,0x0,0x7f,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xf0,0x2,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0xc0,0x0,0x3f,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xf0,0x6,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x40,0x0,0x3f,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xe0,0x4,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x0,0x60,0x0,0x1f,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xe0,0x4,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x60,0x0,0x1f,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xc0,0xc,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x60,0x0,0x1f,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xc0,0xc,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x60,0x0,0xf,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xc0,0x8,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x30,0x0,0xf,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0x80,0x8,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x30,0x0,0xf,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0x80,0x18,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x30,0x0,0x7,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0x80,0x18,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x30,0x0,0x7,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0x0,0x18,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x30,0x0,0x7,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0x0,0x18,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x30,0x0,0x7,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0x0,0x18,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x70,0x0,0x7,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfe,0x0,0x18,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x70,0x0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfe,0x0,0x18,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x70,0x0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfe,0x0,0x18,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x70,0x0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfe,0x0,0x18,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0xf0,0x0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x18,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x1c,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x1c,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x1c,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x3e,0x0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x1e,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x7,0x80,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0xe,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x1e,0x1,0xe0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0xf,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x3f,0xc0,0x70,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x7,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x7f,0xf0,0x38,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x7f,0xf8,0xc,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0xff,0xfe,0x6,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0xff,0xff,0x2,0x7,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0xff,0xff,0x3,0x7,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x7f,0xff,0x3,0x7,0xff,0xff,0xf0,
0xff,0xff,0xff,0xfc,0x1e,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x84,0x7f,0xff,0x3,0x7,0xff,0xff,0xf0,
0xff,0xff,0xff,0xf8,0x7f,0x80,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc,0x7f,0xfe,0x2,0xf,0xff,0xff,0xf0,
0xff,0xff,0xff,0xf0,0xff,0xe0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x1e,0x7f,0xfe,0x0,0xf,0xff,0xff,0xf0,
0xff,0xff,0xff,0xe1,0xff,0xf0,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x1e,0x3f,0xfc,0x0,0x3,0xff,0xff,0xf0,
0xff,0xff,0xff,0xc3,0xff,0xf8,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x3e,0x1f,0xf0,0x0,0x1,0xff,0xff,0xf0,
0xff,0xff,0xff,0xc7,0xff,0xfc,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x3e,0xf,0xe0,0xf,0xe0,0xff,0xff,0xf0,
0xff,0xff,0xff,0x87,0xff,0xfe,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x7f,0x2,0x0,0x1f,0xf8,0x7f,0xff,0xf0,
0xff,0xff,0xff,0xf,0xff,0xfe,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x7f,0x80,0x0,0x3f,0xfc,0x7f,0xff,0xf0,
0xff,0xff,0xfe,0x1f,0xff,0xff,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x7f,0x80,0x0,0xff,0xfc,0x3f,0xff,0xf0,
0xff,0xff,0xf8,0x3f,0xff,0xff,0x80,0x3,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x7f,0xc0,0x3,0xff,0xfe,0x3f,0xff,0xf0,
0xff,0xff,0xc0,0x7f,0xff,0xff,0x80,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0xff,0xf0,0xf,0xff,0xfe,0x3f,0xff,0xf0,
0xff,0xff,0x0,0xff,0xff,0xff,0xc0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0xff,0xff,0xff,0xff,0xff,0x1f,0xff,0xf0,
0xff,0xfc,0x3,0xff,0xff,0xff,0xc0,0x0,0x7f,0xff,0xff,0xff,0xff,0xff,0xf8,0xff,0xff,0xff,0xff,0xff,0x1f,0xff,0xf0,
0xff,0xf0,0x1f,0xff,0xff,0xff,0xe0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xf8,0xff,0xff,0xff,0xff,0xff,0x1f,0xff,0xf0,
0xff,0xe0,0xff,0xff,0xff,0xff,0xe0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xf8,0xff,0xff,0xff,0xff,0xff,0xf,0xff,0xf0,
0xff,0xe1,0xff,0xff,0xff,0xff,0xf0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xf8,0xff,0xff,0xff,0xff,0xff,0x8f,0xff,0xf0,
0xff,0xc3,0xff,0xff,0xff,0xff,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xff,0xf8,0xff,0xff,0xff,0xff,0xff,0x8f,0xff,0xf0,
0xff,0xc7,0xff,0xff,0xff,0xff,0xf8,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xf0,0xff,0xff,0xff,0xff,0xff,0x8f,0xff,0xf0,
0xff,0x87,0xff,0xff,0xff,0xff,0xf8,0x0,0x7,0xff,0xff,0xff,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0x87,0xff,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xfc,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xc7,0xff,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xfc,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xc3,0xff,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xfe,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xe1,0xff,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xfe,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xe1,0xff,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0x0,0x1,0xff,0xff,0xff,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xf0,0xff,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0x80,0x1,0xff,0xff,0xff,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xf8,0x7f,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0xc0,0x1,0xff,0xff,0xff,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xfc,0x3f,0xf0,
0xff,0x87,0xff,0xff,0xff,0xff,0xff,0xc0,0x3,0xff,0xff,0xff,0xff,0xff,0xe1,0xff,0xff,0xff,0xff,0xff,0xfe,0x3f,0xf0,
0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xe0,0x7,0xff,0xff,0xff,0xff,0xff,0xe1,0xff,0xff,0xff,0xff,0xff,0xfe,0x1f,0xf0,
0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xf0,0xf,0xff,0xff,0xff,0xff,0xff,0xe3,0xff,0xff,0xff,0xff,0xff,0xff,0x1f,0xf0,
0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xf8,0x7f,0xff,0xff,0xff,0xff,0xff,0xe3,0xff,0xff,0xff,0xff,0xff,0xff,0xf,0xf0,
0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xf8,0x7f,0xff,0xff,0xff,0xff,0xff,0xc3,0xff,0xff,0xff,0xff,0xff,0xff,0x8f,0xf0,
0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xfc,0x3f,0xff,0xff,0xff,0xff,0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xff,0x8f,0xf0,
0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xfe,0x1f,0xff,0xff,0xff,0xff,0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xff,0x8f,0xf0,
0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xff,0xf,0xff,0xff,0xff,0xff,0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xff,0xf,0xf0,
0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0x7,0xff,0xff,0xff,0xff,0xff,0xff,0x1f,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0xff,0x87,0xff,0xff,0xff,0xff,0xfe,0xf,0xff,0xff,0xff,0xff,0xff,0xfe,0x1f,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0xff,0xc3,0xff,0xff,0xff,0xff,0xf8,0xf,0xff,0xff,0xff,0xff,0xff,0xf8,0x3f,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0xff,0xe1,0xff,0xff,0xff,0xff,0xe0,0xf,0xff,0xff,0xff,0xff,0xff,0xf0,0x7f,0xf0,
0xff,0xf,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x7f,0xff,0xff,0xff,0x80,0x1f,0xff,0xff,0xff,0xff,0xff,0xc0,0xff,0xf0,
0xff,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x1f,0xff,0xff,0xfe,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0x3,0xff,0xf0,
0xff,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x3,0xff,0xff,0xf0,0x0,0x1f,0xff,0xff,0xff,0xff,0xfc,0x7,0xff,0xf0,
0xff,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x3f,0xfe,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xf0,0x1f,0xff,0xf0,
0xff,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xc0,0x7f,0xff,0xf0,
0xff,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0x1,0xff,0xff,0xf0,
0xff,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xfc,0x7,0xff,0xff,0xf0,
0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xf8,0x1f,0xff,0xff,0xf0,
0xff,0x87,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xf0,0x7f,0xff,0xff,0xf0,
0xff,0xc1,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xe0,0xff,0xff,0xff,0xf0,
0xff,0xe0,0xf,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0xc3,0xff,0xff,0xff,0xf0,
0xff,0xf0,0x0,0xf,0xff,0xff,0xff,0xff,0xf8,0x0,0x0,0x0,0x0,0x0,0x3f,0xff,0xff,0xff,0x87,0xff,0xff,0xff,0xf0,
0xff,0xfc,0x0,0x0,0x7f,0xff,0xff,0xff,0xf8,0x0,0x1f,0xff,0xf0,0x0,0x3f,0xff,0xff,0xff,0xf,0xff,0xff,0xff,0xf0,
0xff,0xff,0xe0,0x0,0x7,0xff,0xff,0xff,0xf8,0x7,0xff,0xff,0xff,0xfe,0x1f,0xff,0xff,0xfe,0x1f,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xc0,0x0,0xff,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0x1f,0xff,0xff,0xfc,0x3f,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0x0,0x3f,0xff,0xff,0xe1,0xff,0xff,0xff,0xff,0xff,0xf,0xff,0xff,0xf8,0x7f,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xf0,0xf,0xff,0xff,0xc3,0xff,0xff,0xff,0xff,0xff,0x8f,0xff,0xff,0xf0,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xfe,0x3,0xff,0xff,0x87,0xff,0xff,0xff,0xff,0xff,0x87,0xff,0xff,0xc1,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0x80,0x3f,0xfe,0xf,0xff,0xff,0xff,0xff,0xff,0xc3,0xff,0xff,0x83,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xe0,0x0,0x0,0x1f,0xff,0xff,0xff,0xff,0xff,0xe1,0xff,0xfe,0x7,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xf8,0x0,0x0,0x3f,0xff,0xff,0xff,0xff,0xff,0xf0,0x7f,0xf8,0x1f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x1,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0xf,0x80,0x3f,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x3,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x3f,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0};


tft.setBackgroundColor(COLOR_BLACK);
 tft.drawBitmap(0, 0, tux, 180, 220, COLOR_WHITE);
 delay(2000);
 tft.clear();

}

void createUI1()
{tft.clear();
  tft.setOrientation(0);
  bitmap_test();
  tft.setFont(Terminal12x16);
  tft.drawText(20,100,"JAI SHREE RAM",COLOR_ORANGE);
  delay(1000);
  tft.clear();
  tft.drawText(40,20,"Say with me");
  tft.drawText(40,50,"ROOPA MC");
  tft.drawText(40,80,"REMYA MC");
  tft.drawText(40,110,"HOD MC");
  tft.drawText(40,140,"NIE MC");
  tft.drawText(40,180,"VTU MC");
  delay(1000);
  tft.clear();
  tft.setFont(Terminal12x16);
  tft.drawText(40,70,"STATE");
  tft.drawText(40,100,"OF");
  tft.drawText(40,130,"RELAY");
  tft.drawText(40,160,"CHANNELS");
  delay(1000);
  tft.clear();
  tft.drawRectangle(0,0,tft.maxX()-1,tft.maxY()-1,COLOR_WHITE);
  tft.setFont(Terminal6x8);
   tft.drawText(10,10,"1)State of relay1:",COLOR_WHITE);
   tft.drawText(10,23,"2)State of relay2:",COLOR_WHITE);
   tft.drawText(10,36,"3)State of relay3:",COLOR_WHITE);
   tft.drawText(10,49,"4)State of relay4:",COLOR_WHITE);
   tft.drawText(10,62,"5)State of relay5:",COLOR_WHITE);
   tft.drawText(10,75,"6)State of relay6:",COLOR_WHITE);
   tft.drawText(10,88,"7)State of relay7:",COLOR_WHITE);
   tft.drawText(10,101,"8)State of relay8:",COLOR_WHITE);
   tft.drawText(10,114,"9)State of relay9:",COLOR_WHITE);
   tft.drawText(10,127,"10)State of relay10:",COLOR_WHITE);
   tft.drawText(10,140,"11)State of relay11:",COLOR_WHITE);
   tft.drawText(10,153,"12)State of relay12:",COLOR_WHITE);
   tft.drawText(10,166,"13)State of relay13:",COLOR_WHITE);
   tft.drawText(10,179,"14)State of relay14:",COLOR_WHITE);
   tft.drawText(10,191,"15)State of relay15:",COLOR_WHITE);
   tft.drawText(10,204,"16)State of relay16:",COLOR_WHITE);
   for(int i=0;i<=500;i++)
   {
    delay(10);
    }
   
  
  
  }
  void createUI2()
{ 
  tft.clear();
  tft.setOrientation(1);
  bitmap_test();
  tft.setFont(Terminal12x16);
  tft.drawText(30,80,"JAI SHREE RAM",COLOR_ORANGE);
  delay(1000);
  tft.clear();
  tft.drawText(50,10,"Say with me");
  tft.drawText(50,30,"ROOPA MC");
  tft.drawText(50,50,"REMYA MC");
  tft.drawText(50,70,"HOD MC");
  tft.drawText(50,90,"NIE MC");
  tft.drawText(50,110,"VTU MC");
  delay(1000);
  tft.clear();
  
  
  tft.drawText(70,20,"STATE");
  tft.drawText(70,60,"OF");
  tft.drawText(70,100,"RELAY");
  tft.drawText(70,140,"CHANNELS");
  delay(1000);
  tft.clear();
  tft.drawRectangle(0,0,tft.maxX()-1,tft.maxY()-1,COLOR_WHITE);
 tft.drawText(10,10,"Relay1");
 tft.drawText(120,10,"Relay2");
 tft.drawText(10,30,"Relay3");
 tft.drawText(120,30,"Relay4");
 tft.drawText(10,50,"Relay5");
 tft.drawText(120,50,"Relay6");
 tft.drawText(10,70,"Relay7");
 tft.drawText(120,70,"Relay8");
 tft.drawText(10,90,"Relay9");
 tft.drawText(120,90,"Relay10");
 tft.drawText(10,110,"Relay11");
 tft.drawText(120,110,"Relay12");
 tft.drawText(10,130,"Relay13");
 tft.drawText(120,130,"Relay14");
 tft.drawText(10,150,"Relay15");
 tft.drawText(120,150,"Relay16");
   for(int i=0;i<=500;i++)
   {
    delay(10);
    }
   
    
}
